// <auto-generated />
using System;
using Intex_II.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Intex_II.Migrations
{
    [DbContext(typeof(mummiesContext))]
    partial class mummiesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Intex_II.Models.Analysis", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Analysisid")
                        .HasColumnType("integer");

                    b.Property<int?>("Analysistype")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Doneby")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Analysis");
                });

            modelBuilder.Entity("Intex_II.Models.AnalysisTextile", b =>
                {
                    b.Property<long>("MainAnalysisid")
                        .HasColumnType("bigint");

                    b.Property<long>("MainTextileid")
                        .HasColumnType("bigint");

                    b.HasKey("MainAnalysisid", "MainTextileid");

                    b.ToTable("AnalysisTextile");
                });

            modelBuilder.Entity("Intex_II.Models.Artifactfagelgamousregister", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Coordinateset")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("Photographed")
                        .HasColumnType("text");

                    b.Property<string>("Registernum")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Artifactfagelgamousregister");
                });

            modelBuilder.Entity("Intex_II.Models.ArtifactfagelgamousregisterBurialmain", b =>
                {
                    b.Property<long>("MainArtifactfagelgamousregisterid")
                        .HasColumnType("bigint");

                    b.Property<long>("MainBurialmainid")
                        .HasColumnType("bigint");

                    b.HasKey("MainArtifactfagelgamousregisterid", "MainBurialmainid");

                    b.ToTable("ArtifactfagelgamousregisterBurialmain");
                });

            modelBuilder.Entity("Intex_II.Models.Artifactkomaushimregister", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Currentlocation")
                        .HasColumnType("text");

                    b.Property<string>("Date")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Dimensions")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Entrydate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Excavatornum")
                        .HasColumnType("text");

                    b.Property<string>("Finder")
                        .HasColumnType("text");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.Property<string>("Number")
                        .HasColumnType("text");

                    b.Property<string>("Photos")
                        .HasColumnType("text");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.Property<string>("Provenance")
                        .HasColumnType("text");

                    b.Property<string>("Qualityphotos")
                        .HasColumnType("text");

                    b.Property<string>("Rehousedto")
                        .HasColumnType("text");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Artifactkomaushimregister");
                });

            modelBuilder.Entity("Intex_II.Models.ArtifactkomaushimregisterBurialmain", b =>
                {
                    b.Property<long>("MainArtifactkomaushimregisterid")
                        .HasColumnType("bigint");

                    b.Property<long>("MainBurialmainid")
                        .HasColumnType("bigint");

                    b.HasKey("MainArtifactkomaushimregisterid", "MainBurialmainid");

                    b.ToTable("ArtifactkomaushimregisterBurialmain");
                });

            modelBuilder.Entity("Intex_II.Models.Biological", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Bagnumber")
                        .HasColumnType("integer");

                    b.Property<int?>("Clusternumber")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Initials")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("Previouslysampled")
                        .HasColumnType("text");

                    b.Property<int?>("Racknumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Biological");
                });

            modelBuilder.Entity("Intex_II.Models.BiologicalC14", b =>
                {
                    b.Property<long>("MainBiologicalid")
                        .HasColumnType("bigint");

                    b.Property<long>("MainC14id")
                        .HasColumnType("bigint");

                    b.HasKey("MainBiologicalid", "MainC14id");

                    b.ToTable("BiologicalC14");
                });

            modelBuilder.Entity("Intex_II.Models.Bodyanalysischart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("CariesPeriodontalDisease")
                        .HasColumnType("text");

                    b.Property<int?>("Estimatestature")
                        .HasColumnType("integer");

                    b.Property<string>("Femur")
                        .HasColumnType("text");

                    b.Property<string>("Femurheaddiameter")
                        .HasColumnType("text");

                    b.Property<int?>("Femurlength")
                        .HasColumnType("integer");

                    b.Property<string>("Gonion")
                        .HasColumnType("text");

                    b.Property<string>("Humerus")
                        .HasColumnType("text");

                    b.Property<string>("Humerusheaddiameter")
                        .HasColumnType("text");

                    b.Property<int?>("Humeruslength")
                        .HasColumnType("integer");

                    b.Property<string>("Lambdoidsuture")
                        .HasColumnType("text");

                    b.Property<string>("MedicalIpRamus")
                        .HasColumnType("text");

                    b.Property<string>("Notes")
                        .HasColumnType("text");

                    b.Property<string>("Nuchalcrest")
                        .HasColumnType("text");

                    b.Property<string>("Observations")
                        .HasColumnType("text");

                    b.Property<string>("Orbitedge")
                        .HasColumnType("text");

                    b.Property<string>("Osteophytosis")
                        .HasColumnType("text");

                    b.Property<bool?>("Parietalblossing")
                        .HasColumnType("boolean");

                    b.Property<int?>("Perservationindex")
                        .HasColumnType("integer");

                    b.Property<bool?>("Robust")
                        .HasColumnType("boolean");

                    b.Property<string>("Sciaticnotch")
                        .HasColumnType("text");

                    b.Property<string>("Sphenooccipitalsynchondrosis")
                        .HasColumnType("text");

                    b.Property<string>("Squamossuture")
                        .HasColumnType("text");

                    b.Property<string>("Subpubicangle")
                        .HasColumnType("text");

                    b.Property<string>("Supraorbitalridges")
                        .HasColumnType("text");

                    b.Property<int?>("Toothattrition")
                        .HasColumnType("integer");

                    b.Property<int?>("Tootheruptionageestimation")
                        .HasColumnType("integer");

                    b.Property<bool?>("Ventralarc")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.ToTable("Bodyanalysischart");
                });

            modelBuilder.Entity("Intex_II.Models.Books", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Author")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Link")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("Intex_II.Models.Burialmain", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Adultsubadult")
                        .HasColumnType("text");

                    b.Property<string>("Ageatdeath")
                        .HasColumnType("text");

                    b.Property<string>("Area")
                        .HasColumnType("text");

                    b.Property<long?>("Burialid")
                        .HasColumnType("bigint");

                    b.Property<string>("Burialmaterials")
                        .HasColumnType("text");

                    b.Property<string>("Burialnumber")
                        .HasColumnType("text");

                    b.Property<string>("Clusternumber")
                        .HasColumnType("text");

                    b.Property<string>("Dataexpertinitials")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Dateofexcavation")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Depth")
                        .HasColumnType("text");

                    b.Property<string>("Eastwest")
                        .HasColumnType("text");

                    b.Property<string>("Excavationrecorder")
                        .HasColumnType("text");

                    b.Property<string>("Facebundles")
                        .HasColumnType("text");

                    b.Property<string>("Fieldbookexcavationyear")
                        .HasColumnType("text");

                    b.Property<string>("Fieldbookpage")
                        .HasColumnType("text");

                    b.Property<string>("Goods")
                        .HasColumnType("text");

                    b.Property<string>("Hair")
                        .HasColumnType("text");

                    b.Property<string>("Haircolor")
                        .HasColumnType("text");

                    b.Property<string>("Headdirection")
                        .HasColumnType("text");

                    b.Property<string>("Length")
                        .HasColumnType("text");

                    b.Property<string>("Northsouth")
                        .HasColumnType("text");

                    b.Property<string>("Photos")
                        .HasColumnType("text");

                    b.Property<string>("Preservation")
                        .HasColumnType("text");

                    b.Property<string>("Samplescollected")
                        .HasColumnType("text");

                    b.Property<string>("Sex")
                        .HasColumnType("text");

                    b.Property<string>("Shaftnumber")
                        .HasColumnType("text");

                    b.Property<string>("Southtofeet")
                        .HasColumnType("text");

                    b.Property<string>("Southtohead")
                        .HasColumnType("text");

                    b.Property<string>("Squareeastwest")
                        .HasColumnType("text");

                    b.Property<string>("Squarenorthsouth")
                        .HasColumnType("text");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<string>("Westtofeet")
                        .HasColumnType("text");

                    b.Property<string>("Westtohead")
                        .HasColumnType("text");

                    b.Property<string>("Wrapping")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Burialmain");
                });

            modelBuilder.Entity("Intex_II.Models.BurialmainBiological", b =>
                {
                    b.Property<long>("MainBurialmainid")
                        .HasColumnType("bigint");

                    b.Property<long>("MainBiologicalid")
                        .HasColumnType("bigint");

                    b.HasKey("MainBurialmainid", "MainBiologicalid");

                    b.ToTable("BurialmainBiological");
                });

            modelBuilder.Entity("Intex_II.Models.BurialmainBodyanalysischart", b =>
                {
                    b.Property<long>("MainBurialmainid")
                        .HasColumnType("bigint");

                    b.Property<long>("MainBodyanalysischartid")
                        .HasColumnType("bigint");

                    b.HasKey("MainBurialmainid", "MainBodyanalysischartid");

                    b.ToTable("BurialmainBodyanalysischart");
                });

            modelBuilder.Entity("Intex_II.Models.BurialmainCranium", b =>
                {
                    b.Property<long>("MainBurialmainid")
                        .HasColumnType("bigint");

                    b.Property<long>("MainCraniumid")
                        .HasColumnType("bigint");

                    b.HasKey("MainBurialmainid", "MainCraniumid");

                    b.ToTable("BurialmainCranium");
                });

            modelBuilder.Entity("Intex_II.Models.BurialmainTextile", b =>
                {
                    b.Property<long>("MainBurialmainid")
                        .HasColumnType("bigint");

                    b.Property<long>("MainTextileid")
                        .HasColumnType("bigint");

                    b.HasKey("MainBurialmainid", "MainTextileid");

                    b.ToTable("BurialmainTextile");
                });

            modelBuilder.Entity("Intex_II.Models.C14", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Agebp")
                        .HasColumnType("integer");

                    b.Property<string>("C14lab")
                        .HasColumnType("text");

                    b.Property<int?>("Calendardate")
                        .HasColumnType("integer");

                    b.Property<int?>("Calibrateddateavg")
                        .HasColumnType("integer");

                    b.Property<int?>("Calibrateddatemax")
                        .HasColumnType("integer");

                    b.Property<int?>("Calibrateddatemin")
                        .HasColumnType("integer");

                    b.Property<int?>("Calibratedspan")
                        .HasColumnType("integer");

                    b.Property<string>("Category")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Foci")
                        .HasColumnType("text");

                    b.Property<string>("Location")
                        .HasColumnType("text");

                    b.Property<string>("Questions")
                        .HasColumnType("text");

                    b.Property<int?>("Rack")
                        .HasColumnType("integer");

                    b.Property<int?>("Size")
                        .HasColumnType("integer");

                    b.Property<int?>("Tubenumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("C14");
                });

            modelBuilder.Entity("Intex_II.Models.Color", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Colorid")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("Intex_II.Models.ColorTextile", b =>
                {
                    b.Property<long>("MainColorid")
                        .HasColumnType("bigint");

                    b.Property<long>("MainTextileid")
                        .HasColumnType("bigint");

                    b.HasKey("MainColorid", "MainTextileid");

                    b.ToTable("ColorTextile");
                });

            modelBuilder.Entity("Intex_II.Models.Cranium", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<decimal?>("AlphaCore")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BasionBregmaHeight")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BasionNasion")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BasionProsthionLength")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BizygomaticDiameter")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("InterobitalBreadth")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("InterorbitalBreadth")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("InterorbitalSubtense")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MaxNasalBreadth")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Maxcraniumbreadth")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Maxcraniumlength")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MidOrbitalBreadth")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("MidOrbitalSubtense")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NasionProsthionUpper")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("NasoAlphaSubtense")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("Cranium");
                });

            modelBuilder.Entity("Intex_II.Models.Decoration", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Decorationid")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Decoration");
                });

            modelBuilder.Entity("Intex_II.Models.DecorationTextile", b =>
                {
                    b.Property<long>("MainDecorationid")
                        .HasColumnType("bigint");

                    b.Property<long>("MainTextileid")
                        .HasColumnType("bigint");

                    b.HasKey("MainDecorationid", "MainTextileid");

                    b.ToTable("DecorationTextile");
                });

            modelBuilder.Entity("Intex_II.Models.Dimension", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Dimensionid")
                        .HasColumnType("integer");

                    b.Property<string>("Dimensiontype")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Dimension");
                });

            modelBuilder.Entity("Intex_II.Models.DimensionTextile", b =>
                {
                    b.Property<long>("MainDimensionid")
                        .HasColumnType("bigint");

                    b.Property<long>("MainTextileid")
                        .HasColumnType("bigint");

                    b.HasKey("MainDimensionid", "MainTextileid");

                    b.ToTable("DimensionTextile");
                });

            modelBuilder.Entity("Intex_II.Models.Newsarticle", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Author")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<string>("Urltoimage")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Newsarticle");
                });

            modelBuilder.Entity("Intex_II.Models.Photodata", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Filename")
                        .HasColumnType("text");

                    b.Property<int?>("Photodataid")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Photodata");
                });

            modelBuilder.Entity("Intex_II.Models.PhotodataTextile", b =>
                {
                    b.Property<long>("MainPhotodataid")
                        .HasColumnType("bigint");

                    b.Property<long>("MainTextileid")
                        .HasColumnType("bigint");

                    b.HasKey("MainPhotodataid", "MainTextileid");

                    b.ToTable("PhotodataTextile");
                });

            modelBuilder.Entity("Intex_II.Models.Photoform", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Area")
                        .HasColumnType("text");

                    b.Property<string>("Burialnumber")
                        .HasColumnType("text");

                    b.Property<string>("Eastwest")
                        .HasColumnType("text");

                    b.Property<string>("Filename")
                        .HasColumnType("text");

                    b.Property<string>("Northsouth")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Photodate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Photographer")
                        .HasColumnType("text");

                    b.Property<string>("Squareeastwest")
                        .HasColumnType("text");

                    b.Property<string>("Squarenorthsouth")
                        .HasColumnType("text");

                    b.Property<string>("Tableassociation")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Photoform");
                });

            modelBuilder.Entity("Intex_II.Models.Structure", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Structureid")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Structure");
                });

            modelBuilder.Entity("Intex_II.Models.StructureTextile", b =>
                {
                    b.Property<long>("MainStructureid")
                        .HasColumnType("bigint");

                    b.Property<long>("MainTextileid")
                        .HasColumnType("bigint");

                    b.HasKey("MainStructureid", "MainTextileid");

                    b.ToTable("StructureTextile");
                });

            modelBuilder.Entity("Intex_II.Models.Teammember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Bio")
                        .HasColumnType("text");

                    b.Property<string>("Membername")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Teammember");
                });

            modelBuilder.Entity("Intex_II.Models.Textile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Burialnumber")
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Direction")
                        .HasColumnType("text");

                    b.Property<string>("Estimatedperiod")
                        .HasColumnType("text");

                    b.Property<string>("Locale")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Photographeddate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Sampledate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("Textileid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Textile");
                });

            modelBuilder.Entity("Intex_II.Models.Textilefunction", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("Textilefunctionid")
                        .HasColumnType("integer");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Textilefunction");
                });

            modelBuilder.Entity("Intex_II.Models.TextilefunctionTextile", b =>
                {
                    b.Property<long>("MainTextilefunctionid")
                        .HasColumnType("bigint");

                    b.Property<long>("MainTextileid")
                        .HasColumnType("bigint");

                    b.HasKey("MainTextilefunctionid", "MainTextileid");

                    b.ToTable("TextilefunctionTextile");
                });

            modelBuilder.Entity("Intex_II.Models.Yarnmanipulation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Angle")
                        .HasColumnType("text");

                    b.Property<string>("Component")
                        .HasColumnType("text");

                    b.Property<string>("Count")
                        .HasColumnType("text");

                    b.Property<string>("Direction")
                        .HasColumnType("text");

                    b.Property<string>("Manipulation")
                        .HasColumnType("text");

                    b.Property<string>("Material")
                        .HasColumnType("text");

                    b.Property<string>("Ply")
                        .HasColumnType("text");

                    b.Property<string>("Thickness")
                        .HasColumnType("text");

                    b.Property<int?>("Yarnmanipulationid")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Yarnmanipulation");
                });

            modelBuilder.Entity("Intex_II.Models.YarnmanipulationTextile", b =>
                {
                    b.Property<long>("MainYarnmanipulationid")
                        .HasColumnType("bigint");

                    b.Property<long>("MainTextileid")
                        .HasColumnType("bigint");

                    b.HasKey("MainYarnmanipulationid", "MainTextileid");

                    b.ToTable("YarnmanipulationTextile");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("AspNetUserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
